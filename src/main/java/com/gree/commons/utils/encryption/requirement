包含常见的加解密算法
    MD5、SHA、AES（对称）、RSA（非对称）、base64
    考虑 跨语言支持 问题，需要多方面考虑，做好测试
        前端 JS 对数据进行加密后，后端　Java 无法对其解密处理
            确定使用统一编码集
    考虑 URL 编/解码问题
        JS 和　Java 对应的对 URL 编解码的方法


AES：

RSA：如果要跟谁通信，就保存谁的公钥，向对方发送数据时，用对方的公钥进行加密，发给对方后，对方用自身的私钥进行解密即可
    计算量大，一般只用于关键信息的加密，如密码、对称加密算法的密钥等
    1. 客户端向服务器申请密钥；
    2. 服务器收到申请后，生成一对密钥，将公钥发给客户端，私钥自己保存；
    3. 客户端拿到公钥后，使用其对密码进行加密，然后将密文发给服务器；
    4. 服务器收到密文后，使用私钥对其解密，判断其是否正确。

MD5：信息摘要算法，确保信息完整一致
    其并不是一种加密算法，因为其拥有不可逆性，无法通过Hash后的串知道原串是什么，只能做比较。

    编写字符串和文件的 MD5 获得算法

    toHex 代码有问题，如果为空如何处理

    DigestUtils  org.springframework.util 提供了MD5的加密算法，可以直接使用

SHA：跟 MD5 的实现方式基本一致，只需要改一下算法即可

跨语言问题，JS 加密不会呀。。。

URL 编/解码问题：
    在 Header 中传递非 ASCII 字符时，需要先用 URLEncode 进行编码，再添加入 Header 中

    Java中的 URLEncode,URLDecode   Js(encodeURIComponent,decodeURIComponent)
